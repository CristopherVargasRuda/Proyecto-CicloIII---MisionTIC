// <auto-generated />
using System;
using Impresoras3D.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Impresoras3D.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    partial class AppContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Impresoras3D.App.Dominio.Auxiliar", b =>
                {
                    b.Property<int>("Identificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identificacion"), 1L, 1);

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SegundoNombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Identificacion");

                    b.ToTable("Auxiliar");
                });

            modelBuilder.Entity("Impresoras3D.App.Dominio.CompraSeguro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImpresoraPlacaInventario")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SeguroId")
                        .HasColumnType("int");

                    b.Property<int>("SocioEmpresaDocumento")
                        .HasColumnType("int");

                    b.Property<int>("SocioEmpresaIdentificacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SeguroId");

                    b.HasIndex("SocioEmpresaIdentificacion");

                    b.ToTable("Compra_seguro");
                });

            modelBuilder.Entity("Impresoras3D.App.Dominio.JefeOperaciones", b =>
                {
                    b.Property<int>("Identificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identificacion"), 1L, 1);

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SegundoNombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Identificacion");

                    b.ToTable("Jefe_operaciones");
                });

            modelBuilder.Entity("Impresoras3D.App.Dominio.Operario", b =>
                {
                    b.Property<int>("Identificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identificacion"), 1L, 1);

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SegundoNombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Identificacion");

                    b.ToTable("Operario");
                });

            modelBuilder.Entity("Impresoras3D.App.Dominio.Seguro", b =>
                {
                    b.Property<int>("Identificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identificacion"), 1L, 1);

                    b.HasKey("Identificacion");

                    b.ToTable("Seguro");
                });

            modelBuilder.Entity("Impresoras3D.App.Dominio.SeguroYTipoCubrimiento", b =>
                {
                    b.Property<int>("SeguroId")
                        .HasColumnType("int");

                    b.Property<int>("TipoCubrimientoId")
                        .HasColumnType("int");

                    b.HasKey("SeguroId", "TipoCubrimientoId");

                    b.HasIndex("TipoCubrimientoId");

                    b.ToTable("Seguro_tipoCubrimiento");
                });

            modelBuilder.Entity("Impresoras3D.App.Dominio.SocioEmpresa", b =>
                {
                    b.Property<int>("Identificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identificacion"), 1L, 1);

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SegundoNombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Identificacion");

                    b.ToTable("Socio_empresa");
                });

            modelBuilder.Entity("Impresoras3D.App.Dominio.Tecnico", b =>
                {
                    b.Property<int>("Identificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Identificacion"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("NivelEstudios")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("SegundoNombre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Identificacion");

                    b.ToTable("Tecnico");
                });

            modelBuilder.Entity("Impresoras3D.App.Dominio.TipoCubrimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tipo_cubrimiento");
                });

            modelBuilder.Entity("Impresoras3D.App.Dominio.CompraSeguro", b =>
                {
                    b.HasOne("Impresoras3D.App.Dominio.Seguro", "Seguro")
                        .WithMany()
                        .HasForeignKey("SeguroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Impresoras3D.App.Dominio.SocioEmpresa", "SocioEmpresa")
                        .WithMany("CompraSeguros")
                        .HasForeignKey("SocioEmpresaIdentificacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seguro");

                    b.Navigation("SocioEmpresa");
                });

            modelBuilder.Entity("Impresoras3D.App.Dominio.SeguroYTipoCubrimiento", b =>
                {
                    b.HasOne("Impresoras3D.App.Dominio.Seguro", "Seguro")
                        .WithMany("SegurosYTipoCubrimiento")
                        .HasForeignKey("SeguroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Impresoras3D.App.Dominio.TipoCubrimiento", "TipoCubrimiento")
                        .WithMany("SeguroYTipoCubrimiento")
                        .HasForeignKey("TipoCubrimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Seguro");

                    b.Navigation("TipoCubrimiento");
                });

            modelBuilder.Entity("Impresoras3D.App.Dominio.Seguro", b =>
                {
                    b.Navigation("SegurosYTipoCubrimiento");
                });

            modelBuilder.Entity("Impresoras3D.App.Dominio.SocioEmpresa", b =>
                {
                    b.Navigation("CompraSeguros");
                });

            modelBuilder.Entity("Impresoras3D.App.Dominio.TipoCubrimiento", b =>
                {
                    b.Navigation("SeguroYTipoCubrimiento");
                });
#pragma warning restore 612, 618
        }
    }
}
